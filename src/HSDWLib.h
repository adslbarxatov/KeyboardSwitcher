/////////////////////////////////////////////////////////////////////////////////////
/*
	Библиотека преобразования двоичных файлов в HEX-код и обратно, DOS-текста
	в Windows и обратно, исправления раскладки клавиатуры

	Автор: Nicolay B. aka RD_AAOW
*/
/////////////////////////////////////////////////////////////////////////////////////
/*
	ОПИСАНИЕ:
	1. SHConvert	Преобразует файл (ASCII-символы) в HEX-код
					Принимает имя преобразуемого файла

	2. HSConvert	Обратная к предыдущей
					Принимает имя преобразуемого файла
	
	3. DWConvert	Преобразует текст в DOS-кодировке в Windows-кодировку
					Принимает имя преобразуемого файла
	
	4. WDConvert	Обратная к предыдущей
					Принимает имя преобразуемого файла

	5. REConvert*	Преобразует русскую раскладку клавиатуры в английскую
					Принимает имя преобразуемого файла

	6. ERConvert*	Обратная к предыдущей
					Принимает имя преобразуемого файла

	- FileNameOut	Формирует индивидуальное имя выходного файла для каждого из преобразований
					Принимает номер типа преобразования, имя исходного файла;
					по указателю возвращает имя конечного файла

	* Обозначенные функции отключены в программах-конвертерах, но работают в библиотеках.
	  В DLL они трансформированы для работы со строками

	ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ:
	1. Все функции (кроме FileNameOut; она не возвращает никаких значений) возвращают:
		- (0), если операция завершилась успешно;
		- (-1), если не удалось открыть исходный файл (не существует или недоступен);
		- (-2), если не удалось создать выходной файл (запись на носителе недоступна).
	2. DW, WD возвращают (1), если в исходном файле обнаружились нетекстовые** символы;
	3. RE, ER возвращают (1), если в исходном файле обнаружились служебные символы
		(< 0x20, кроме 0x09, 0x0A и 0x0D)

	** К текстовым символам относятся:
		Из таблицы DOS (DOS to Windows):
		— Символы табуляции, абзаца (0A, 0D) и пробела
		— Символы !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
		— Символы цифр (0 - 9)
		— Символы латиницы (A - Z, a - z)
		— Символы русского алфавита (А - Я, а - я, Ё, ё)
		— Символы ¶, §, ° и №
		— Маркеры • и ·
		Всего – 170
		
		Из таблицы Windows (режим Windows to DOS):
		— Символы табуляции, абзаца (0A, 0D) и пробела (2)
		— Символы !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
		— Символы цифр (0 - 9)
		— Символы латиницы (A - Z, a - z)
		— Символы русского алфавита (А - Я, а - я, Ё, ё)
		— Символы ¶, §, ° и №
		— Маркеры • и ·
		— Символы кавычек (5), тире (2), переноса, …, €, ‰, ™, ©, ®, ±, µ;
			они заменяются на конструкции, такие, как (tm), (r), Euro, ..., micro и т.д.
		Всего – 187
*/

/////////////////////////////////////////////////////////////////////////////////////
// Снятие предупреждений о безопасности при отладке
#define _CRT_SECURE_NO_WARNINGS

// Заголовки
#include <stdio.h>
#include <string.h>
#include "..\Generics\CSTypes.h"
#include <windows.h>
//#include <conio.h>
//#include <process.h>				// Для заголовка консольного окна
//#include <CommDlg.h>

/////////////////////////////////////////////////////////////////////////////////////
// Ресурсы: данные о создаваемом приложении
#define LC_VERSION				1,1,0,0
#define LC_VERSION_S			"1.1.0.0"
#define LC_PRODUCT				"A tool for quick fixing wrong keyboard layout (based on HSDW 5.2)"
#define LC_COMPANY				"RD AAOW"
//#define	LUPD	"Write: 19.12.2012; 19:50; update: 5.10.2017; 1:02"		// EXE Last update

// Параметры
#define DEFSZ		1024			// Стандартная длина имён файлов для библиотеки

#define SH_EXT		".hex"			// Выходные расширения файлов
#define HS_EXT		".bin"
#define DW_EXT		".win"
#define WD_EXT		".dos"
#define RE_EXT		".en"
#define ER_EXT		".ru"

// Прототипы
#define LC_API(t)	__declspec (dllexport) t
LC_API(sint) SHConvert	 (schar *FNam);								// Text в HEX
LC_API(sint) HSConvert	 (schar *FNam);								// HEX в Text
LC_API(sint) DWConvert	 (schar *FNam);								// DOS в Windows
LC_API(sint) WDConvert	 (schar *FNam);								// Windows в DOS
LC_API(schar*) REConvert (schar *String);							// Русскую раскладку в английскую
LC_API(schar*) ERConvert (schar *String);							// Английскую раскладку в русскую
LC_API(void) FileNameOut (uchar Mode, schar *FNam, schar *FNamO);	// Создание имени выходного файла
